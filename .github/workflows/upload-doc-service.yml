name: Upload Document Service CI/CD Pipeline 

on:
  push:
    branches: ["main"]
env:
  IMG_NAME: gemardyz/upload-document-service
  REGISTRY: docker.io
  GITHUB_SHA: ${{github.sha}}
  GITHUB_BRANCH: ${{github.ref_name}}
  CONTAINER: upload-document-service
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Java JDK
      uses: actions/setup-java@v2
      with:
        java-version: '18'
        distribution: 'adopt'
    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql db: digital_document
        postgresql user: ${{ secrets.POSTGRES_USERNAME }}
        postgresql password: ${{ secrets.POSTGRES_PASSWORD }}
        
    - name: Build with Maven
      env: 
        PORT: 8181
        POSTGRES_USERNAME: ${{secrets.POSTGRES_USERNAME}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      run: mvn clean install
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: docker/Dockerfile
        envs: IMAGE_NAME,GITHUB_SHA,GITHUB_BRANCH
        pull: true
        push: true
        tags: ${{ env.IMG_NAME }}:${{ env.GITHUB_BRANCH }}-${{ env.GITHUB_SHA }}
    
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_TOKEN }}
    - name: Configure SSH
      run: |
        mkdir -p /home/runner/.ssh
        echo "${{ secrets.DIGITALOCEAN_SSHKEY }}" > /home/runner/.ssh/id_rsa
        chmod 600 /home/runner/.ssh/id_rsa
        ssh-keyscan 159.223.53.82 >> ~/.ssh/known_hosts
        git config --global core.sshCommand "ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
    - name: SSH to Droplet and deploy
      run: |
        doctl compute ssh ubuntu-s-1vcpu-1gb-amd-sgp1-01 --ssh-command "cd /opt/digitalocean/digital-mortgage-deployment/ && make stop && export IMAGE_DMSVC=${{ env.IMG_NAME }}:${{ env.GITHUB_BRANCH }}-${{ env.GITHUB_SHA }} && make start-all-services"
